{"ast":null,"code":"var _jsxFileName = \"C:\\\\OTHERS\\\\Codes\\\\beach-resort-\\\\src\\\\context.js\";\nimport React, { Component } from \"react\";\nimport items from \"./data\";\nimport Client from \"./Contentful\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomContext = /*#__PURE__*/React.createContext();\n\nclass RoomProvider extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: false,\n      type: \"all\",\n      capicity: 1,\n      price: 0,\n      minPrice: 0,\n      maxPrize: 0,\n      minSize: 0,\n      maxSize: 0,\n      breakfast: false,\n      pets: false\n    };\n\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === \"checkbox\" ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n\n    this.filterRooms = () => {\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state; //all the rooms\n\n      let tempRooms = [...rooms]; //transform value\n\n      capacity = parseInt(capacity);\n      price = parseInt(price); //filter by type\n\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      } //filter by capacity\n\n\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      } //filter by price\n\n\n      tempRooms = tempRooms.filter(room => room.price <= price); //filter by size\n\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize); //filter by breakfast\n\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      } //filter by pets\n\n\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      } //change state\n\n\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n\n  // getData = async () => {\n  //   try {\n  //     let response = await Client.getEntries({\n  //       content_type: \"beachResortRoom\",\n  //     });\n  //     let rooms = this.formatData(response.items);\n  //     let featuredRooms = rooms.filter((room) => room.featured === true);\n  //     let maxPrice = Math.max(...rooms.map((item) => item.price));\n  //     let maxSize = Math.max(...rooms.map((item) => item.size));\n  //     this.setState({\n  //       rooms,\n  //       sortedRooms: rooms,\n  //       featuredRooms,\n  //       loading: false,\n  //       price: maxPrice,\n  //       maxPrice,\n  //       maxSize,\n  //     });\n  //   } catch (error) {\n  //     console.log(error);\n  //   }\n  // };\n  componentDidMount() {\n    //this.getData();\n    let rooms = this.formatData(items);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    this.setState({\n      rooms,\n      sortedRooms: rooms,\n      featuredRooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n\n  formatData(items) {\n    let tempItems = items.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = { ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItems;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(RoomContext.Provider, {\n      value: { ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/_jsxDEV(RoomConsumer, {\n      children: value => /*#__PURE__*/_jsxDEV(Component, { ...props,\n        context: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"names":["React","Component","items","Client","RoomContext","createContext","RoomProvider","state","rooms","sortedRooms","featuredRooms","loading","type","capicity","price","minPrice","maxPrize","minSize","maxSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","capacity","parseInt","filter","size","componentDidMount","formatData","featured","maxPrice","Math","max","map","item","tempItems","id","sys","images","fields","image","file","url","render","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper"],"sources":["C:/OTHERS/Codes/beach-resort-/src/context.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport items from \"./data\";\r\nimport Client from \"./Contentful\";\r\n\r\nconst RoomContext = React.createContext();\r\n\r\nclass RoomProvider extends Component {\r\n  state = {\r\n    rooms: [],\r\n    sortedRooms: [],\r\n    featuredRooms: [],\r\n    loading: false,\r\n    type: \"all\",\r\n    capicity: 1,\r\n    price: 0,\r\n    minPrice: 0,\r\n    maxPrize: 0,\r\n    minSize: 0,\r\n    maxSize: 0,\r\n    breakfast: false,\r\n    pets: false,\r\n  };\r\n  // getData = async () => {\r\n  //   try {\r\n  //     let response = await Client.getEntries({\r\n  //       content_type: \"beachResortRoom\",\r\n  //     });\r\n  //     let rooms = this.formatData(response.items);\r\n  //     let featuredRooms = rooms.filter((room) => room.featured === true);\r\n  //     let maxPrice = Math.max(...rooms.map((item) => item.price));\r\n  //     let maxSize = Math.max(...rooms.map((item) => item.size));\r\n\r\n  //     this.setState({\r\n  //       rooms,\r\n  //       sortedRooms: rooms,\r\n  //       featuredRooms,\r\n  //       loading: false,\r\n  //       price: maxPrice,\r\n  //       maxPrice,\r\n  //       maxSize,\r\n  //     });\r\n  //   } catch (error) {\r\n  //     console.log(error);\r\n  //   }\r\n  // };\r\n  componentDidMount() {\r\n    //this.getData();\r\n    let rooms = this.formatData(items);\r\n    let featuredRooms = rooms.filter((room) => room.featured === true);\r\n    let maxPrice = Math.max(...rooms.map((item) => item.price));\r\n    let maxSize = Math.max(...rooms.map((item) => item.size));\r\n\r\n    this.setState({\r\n      rooms,\r\n      sortedRooms: rooms,\r\n      featuredRooms,\r\n      loading: false,\r\n      price: maxPrice,\r\n      maxPrice,\r\n      maxSize,\r\n    });\r\n  }\r\n\r\n  formatData(items) {\r\n    let tempItems = items.map((item) => {\r\n      let id = item.sys.id;\r\n      let images = item.fields.images.map((image) => image.fields.file.url);\r\n      let room = { ...item.fields, images, id };\r\n\r\n      return room;\r\n    });\r\n    return tempItems;\r\n  }\r\n\r\n  getRoom = (slug) => {\r\n    let tempRooms = [...this.state.rooms];\r\n    const room = tempRooms.find((room) => room.slug === slug);\r\n    return room;\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const target = event.target;\r\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\r\n    const name = event.target.name;\r\n    this.setState(\r\n      {\r\n        [name]: value,\r\n      },\r\n      this.filterRooms\r\n    );\r\n  };\r\n\r\n  filterRooms = () => {\r\n    let { rooms, type, capacity, price, minSize, maxSize, breakfast, pets } =\r\n      this.state;\r\n\r\n    //all the rooms\r\n    let tempRooms = [...rooms];\r\n    //transform value\r\n    capacity = parseInt(capacity);\r\n    price = parseInt(price);\r\n\r\n    //filter by type\r\n    if (type !== \"all\") {\r\n      tempRooms = tempRooms.filter((room) => room.type === type);\r\n    }\r\n\r\n    //filter by capacity\r\n    if (capacity !== 1) {\r\n      tempRooms = tempRooms.filter((room) => room.capacity >= capacity);\r\n    }\r\n    //filter by price\r\n    tempRooms = tempRooms.filter((room) => room.price <= price);\r\n\r\n    //filter by size\r\n    tempRooms = tempRooms.filter(\r\n      (room) => room.size >= minSize && room.size <= maxSize\r\n    );\r\n    //filter by breakfast\r\n    if (breakfast) {\r\n      tempRooms = tempRooms.filter((room) => room.breakfast === true);\r\n    }\r\n\r\n    //filter by pets\r\n    if (pets) {\r\n      tempRooms = tempRooms.filter((room) => room.pets === true);\r\n    }\r\n    //change state\r\n    this.setState({\r\n      sortedRooms: tempRooms,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <RoomContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          getRoom: this.getRoom,\r\n          handleChange: this.handleChange,\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </RoomContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst RoomConsumer = RoomContext.Consumer;\r\n\r\nexport function withRoomConsumer(Component) {\r\n  return function ConsumerWrapper(props) {\r\n    return (\r\n      <RoomConsumer>\r\n        {(value) => <Component {...props} context={value} />}\r\n      </RoomConsumer>\r\n    );\r\n  };\r\n}\r\nexport { RoomProvider, RoomConsumer, RoomContext };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}